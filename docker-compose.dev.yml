version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant-storage:/qdrant/storage
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  nextjs:
    platform: linux/amd64   
    build:
      context: .
      dockerfile: Dockerfile
      target: deps   # <--- stop at deps stage, so we have node_modules but not the build
    container_name: nextjs
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - next_node_modules:/app/node_modules  # container-managed node_modules
      - next_cache:/app/.next         # container-managed build cache
    command: npm run dev
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/app
    depends_on:
      - redis
      - qdrant
      - postgres
    restart: no

volumes:
  next_node_modules:
  next_cache: