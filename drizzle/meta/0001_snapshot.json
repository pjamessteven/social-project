{
  "id": "0001_initial",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.detrans_questions": {
      "name": "detrans_questions",
      "schema": "",
      "columns": {
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "most_recently_asked": {
          "name": "most_recently_asked",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_detrans_questions_name": {
          "name": "idx_detrans_questions_name",
          "columns": [
            "name"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.detrans_cache": {
      "name": "detrans_cache",
      "schema": "",
      "columns": {
        "prompt_hash": {
          "name": "prompt_hash",
          "type": "varchar(64)",
          "primaryKey": true,
          "notNull": true
        },
        "prompt_text": {
          "name": "prompt_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "result_text": {
          "name": "result_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_name": {
          "name": "question_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_accessed": {
          "name": "last_accessed",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_detrans_cache_question": {
          "name": "idx_detrans_cache_question",
          "columns": [
            "question_name"
          ],
          "isUnique": false
        },
        "idx_detrans_cache_created": {
          "name": "idx_detrans_cache_created",
          "columns": [
            "created_at"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {
        "detrans_cache_question_name_detrans_questions_name_fk": {
          "name": "detrans_cache_question_name_detrans_questions_name_fk",
          "tableFrom": "detrans_cache",
          "tableTo": "detrans_questions",
          "columnsFrom": [
            "question_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.affirm_questions": {
      "name": "affirm_questions",
      "schema": "",
      "columns": {
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        },
        "views_count": {
          "name": "views_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "most_recently_asked": {
          "name": "most_recently_asked",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_affirm_questions_name": {
          "name": "idx_affirm_questions_name",
          "columns": [
            "name"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.affirm_cache": {
      "name": "affirm_cache",
      "schema": "",
      "columns": {
        "prompt_hash": {
          "name": "prompt_hash",
          "type": "varchar(64)",
          "primaryKey": true,
          "notNull": true
        },
        "prompt_text": {
          "name": "prompt_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "result_text": {
          "name": "result_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_name": {
          "name": "question_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_accessed": {
          "name": "last_accessed",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_affirm_cache_question": {
          "name": "idx_affirm_cache_question",
          "columns": [
            "question_name"
          ],
          "isUnique": false
        },
        "idx_affirm_cache_created": {
          "name": "idx_affirm_cache_created",
          "columns": [
            "created_at"
          ],
          "isUnique": false
        }
      },
      "foreignKeys": {
        "affirm_cache_question_name_affirm_questions_name_fk": {
          "name": "affirm_cache_question_name_affirm_questions_name_fk",
          "tableFrom": "affirm_cache",
          "tableTo": "affirm_questions",
          "columnsFrom": [
            "question_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {},
  "schemas": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
